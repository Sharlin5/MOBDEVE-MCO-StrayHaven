Index: app/src/main/java/com/mobdeve/s11/manuel/tang/strayhaven/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.mobdeve.s11.manuel.tang.strayhaven;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n\r\n    private EditText etEmail, etPassword;\r\n    private Button btnLogin;\r\n    private TextView btnRegister;\r\n    private ProgressBar pbLogin;\r\n\r\n    private FirebaseAuth mAuth;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n        this.initComponents();\r\n        this.initFirebase();\r\n    }\r\n\r\n    public void initComponents(){\r\n        etEmail = findViewById(R.id.et_email);\r\n        etPassword = findViewById(R.id.et_password);\r\n        pbLogin = findViewById(R.id.pb_login);\r\n\r\n        btnLogin = findViewById(R.id.btn_login_confirm);\r\n\r\n        btnLogin.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                String email = etEmail.getText().toString().trim();\r\n                String password = etPassword.getText().toString().trim();\r\n                if(checkValidLogin(email, password)){\r\n                    signIn(email, password);\r\n                }\r\n            }\r\n        });\r\n\r\n        btnRegister = findViewById(R.id.tv_signup_link);\r\n\r\n        btnRegister.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(MainActivity.this, RegisterActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n    }\r\n\r\n    private void initFirebase(){\r\n        this.mAuth = FirebaseAuth.getInstance();\r\n    }\r\n\r\n    private void signIn(String email, String password){\r\n        pbLogin.setVisibility(View.VISIBLE);\r\n        this.mAuth.signInWithEmailAndPassword(email, password)\r\n                .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<AuthResult> task) {\r\n                        if (task.isSuccessful()){\r\n                            Intent intent = new Intent(MainActivity.this, HomeRequestActivity.class).putExtra(\"from\", \"activity_main\");\r\n                            startActivity(intent);\r\n                            finish();\r\n                        }\r\n                        else {\r\n                            pbLogin.setVisibility(View.GONE);\r\n                            failedLogin();\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n\r\n    private void failedLogin(){\r\n        Toast.makeText(this, \"Login Failed\", Toast.LENGTH_SHORT).show();\r\n    }\r\n\r\n    private boolean checkValidLogin(String email, String password){\r\n        boolean isValid = true;\r\n        if(email.isEmpty()){\r\n            this.etEmail.setError(\"Required Field\");\r\n            isValid = false;\r\n        }\r\n        if (password.isEmpty()){\r\n            this.etPassword.setError(\"Required Field\");\r\n            isValid = false;\r\n        }\r\n        return isValid;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/mobdeve/s11/manuel/tang/strayhaven/MainActivity.java b/app/src/main/java/com/mobdeve/s11/manuel/tang/strayhaven/MainActivity.java
--- a/app/src/main/java/com/mobdeve/s11/manuel/tang/strayhaven/MainActivity.java	(revision ce2b38e6c4694f90d110b50234badc0f6621a9c0)
+++ b/app/src/main/java/com/mobdeve/s11/manuel/tang/strayhaven/MainActivity.java	(date 1631795509006)
@@ -16,6 +16,7 @@
 import com.google.android.gms.tasks.Task;
 import com.google.firebase.auth.AuthResult;
 import com.google.firebase.auth.FirebaseAuth;
+import com.google.firebase.auth.FirebaseUser;
 
 public class MainActivity extends AppCompatActivity {
 
@@ -26,6 +27,20 @@
 
     private FirebaseAuth mAuth;
 
+    @Override
+    protected void onStart() {
+        super.onStart();
+
+        FirebaseUser firebaseUser = FirebaseAuth.getInstance().getCurrentUser();
+
+        if (firebaseUser != null) {
+            Intent intent = new Intent(MainActivity.this, HomeRequestActivity.class);
+            startActivity(intent);
+            finish();
+        }
+
+    }
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// Top-level build file where you can add configuration options common to all sub-projects/modules.\r\nbuildscript {\r\n    repositories {\r\n        google()\r\n        mavenCentral()\r\n    }\r\n    dependencies {\r\n        classpath 'com.android.tools.build:gradle:7.0.1'\r\n        classpath 'com.google.gms:google-services:4.3.10'\r\n\r\n        // NOTE: Do not place your application dependencies here; they belong\r\n        // in the individual module build.gradle files\r\n    }\r\n}\r\n\r\nallprojects {\r\n    repositories {\r\n        google()\r\n        mavenCentral()\r\n        jcenter() // Warning: this repository is going to shut down soon\r\n    }\r\n}\r\n\r\ntask clean(type: Delete) {\r\n    delete rootProject.buildDir\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build.gradle b/build.gradle
--- a/build.gradle	(revision ce2b38e6c4694f90d110b50234badc0f6621a9c0)
+++ b/build.gradle	(date 1631634351559)
@@ -5,7 +5,7 @@
         mavenCentral()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:7.0.1'
+        classpath 'com.android.tools.build:gradle:7.0.2'
         classpath 'com.google.gms:google-services:4.3.10'
 
         // NOTE: Do not place your application dependencies here; they belong
Index: .idea/deploymentTargetDropDown.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetDropDown\">\r\n    <targetSelectedWithDropDown>\r\n      <Target>\r\n        <type value=\"QUICK_BOOT_TARGET\" />\r\n        <deviceKey>\r\n          <Key>\r\n            <type value=\"VIRTUAL_DEVICE_PATH\" />\r\n            <value value=\"C:\\Users\\Lary\\.android\\avd\\Pixel_3a_API_30_x86.avd\" />\r\n          </Key>\r\n        </deviceKey>\r\n      </Target>\r\n    </targetSelectedWithDropDown>\r\n    <timeTargetWasSelectedWithDropDown value=\"2021-08-27T10:38:46.846570500Z\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/deploymentTargetDropDown.xml b/.idea/deploymentTargetDropDown.xml
--- a/.idea/deploymentTargetDropDown.xml	(revision ce2b38e6c4694f90d110b50234badc0f6621a9c0)
+++ b/.idea/deploymentTargetDropDown.xml	(date 1631783427912)
@@ -7,11 +7,31 @@
         <deviceKey>
           <Key>
             <type value="VIRTUAL_DEVICE_PATH" />
-            <value value="C:\Users\Lary\.android\avd\Pixel_3a_API_30_x86.avd" />
+            <value value="C:\Users\Aika Manuel\.android\avd\Pixel_3a_API_30.avd" />
           </Key>
         </deviceKey>
       </Target>
     </targetSelectedWithDropDown>
-    <timeTargetWasSelectedWithDropDown value="2021-08-27T10:38:46.846570500Z" />
+    <timeTargetWasSelectedWithDropDown value="2021-09-16T09:10:22.494703700Z" />
+    <targetsSelectedWithDialog>
+      <Target>
+        <type value="QUICK_BOOT_TARGET" />
+        <deviceKey>
+          <Key>
+            <type value="VIRTUAL_DEVICE_PATH" />
+            <value value="C:\Users\Aika Manuel\.android\avd\Nexus_5_API_30.avd" />
+          </Key>
+        </deviceKey>
+      </Target>
+      <Target>
+        <type value="QUICK_BOOT_TARGET" />
+        <deviceKey>
+          <Key>
+            <type value="VIRTUAL_DEVICE_PATH" />
+            <value value="C:\Users\Aika Manuel\.android\avd\Pixel_3a_API_30.avd" />
+          </Key>
+        </deviceKey>
+      </Target>
+    </targetsSelectedWithDialog>
   </component>
 </project>
\ No newline at end of file
Index: app/src/main/java/com/mobdeve/s11/manuel/tang/strayhaven/SettingsActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.mobdeve.s11.manuel.tang.strayhaven;\r\n\r\nimport androidx.activity.result.ActivityResult;\r\nimport androidx.activity.result.ActivityResultCallback;\r\nimport androidx.activity.result.ActivityResultLauncher;\r\nimport androidx.activity.result.contract.ActivityResultContract;\r\nimport androidx.activity.result.contract.ActivityResultContracts;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.app.ComponentActivity;\r\nimport androidx.core.content.ContextCompat;\r\n\r\nimport android.Manifest;\r\nimport android.app.Activity;\r\nimport android.content.ContentValues;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.drawable.BitmapDrawable;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.Environment;\r\nimport android.provider.MediaStore;\r\nimport android.util.Base64;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.Toast;\r\n\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageMetadata;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.google.firebase.storage.UploadTask;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.File;\r\nimport java.net.URI;\r\nimport java.security.Key;\r\n\r\npublic class SettingsActivity extends AppCompatActivity {\r\n\r\n    private ImageButton ibBack;\r\n    private Button btnLogout, btnSave;\r\n    private EditText etName, etDescription, etLocation, etPassword;\r\n    private ImageView ivProfile, ivFeatured1, ivFeatured2, ivFeatured3, ivFeatured4, ivFeatured5;\r\n\r\n    private static final int PERMISSION_CODE = 1000;\r\n    private static final int IMAGE_CAPTURE_CODE = 1001;\r\n    private Uri imageUri;\r\n    private Uri featured1Uri, featured2Uri, featured3Uri, featured4Uri, featured5Uri;\r\n\r\n    private FirebaseUser user;\r\n    private FirebaseAuth mAuth;\r\n    private FirebaseDatabase database;\r\n    private FirebaseStorage storage;\r\n    private String userId;\r\n    private String email, username;\r\n    private String imageUrl;\r\n    private String featured1Url, featured2Url, featured3Url, featured4Url, featured5Url;\r\n    private User currUser;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_settings);\r\n        this.initComponents();\r\n        this.initFirebase();\r\n        overridePendingTransition(0,0);\r\n        getIntent().addFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);\r\n    }\r\n\r\n    @Override\r\n    protected void onPause() {\r\n        super.onPause();\r\n        overridePendingTransition(0, 0);\r\n    }\r\n\r\n    //Initialize objects\r\n    public void initComponents(){\r\n        this.ibBack = findViewById(R.id.ib_settings_back);\r\n        this.btnLogout = findViewById(R.id.btn_settings_logout);\r\n        this.etName = findViewById(R.id.et_settings_name);\r\n        this.etDescription = findViewById(R.id.et_settings_desc);\r\n        this.etLocation = findViewById(R.id.et_settings_loc);\r\n        this.etPassword = findViewById(R.id.et_settings_pass);\r\n        this.btnSave = findViewById(R.id.btn_settings_save);\r\n        this.ivProfile = findViewById(R.id.iv_settings_user_pic);\r\n        this.ivFeatured1 = findViewById(R.id.iv_settings_featured_1);\r\n        this.ivFeatured2 = findViewById(R.id.iv_settings_featured_2);\r\n        this.ivFeatured3 = findViewById(R.id.iv_settings_featured_3);\r\n        this.ivFeatured4 = findViewById(R.id.iv_settings_featured_4);\r\n        this.ivFeatured5 = findViewById(R.id.iv_settings_featured_5);\r\n\r\n\r\n        ibBack.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                finish();\r\n            }\r\n        });\r\n\r\n        btnLogout.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(SettingsActivity.this, MainActivity.class);\r\n                intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK|Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n        btnSave.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                String name = etName.getText().toString().trim();\r\n                String password = etPassword.getText().toString().trim();\r\n                if(isValid(name, password)){\r\n                    updatePhoto();\r\n                }\r\n            }\r\n        });\r\n\r\n        ivProfile.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                pickImageFromGallery(\"Profile\");\r\n                //pickImageFromCamera();\r\n            }\r\n        });\r\n\r\n        ivFeatured1.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                pickImageFromGallery(\"Featured1\");\r\n            }\r\n        });\r\n\r\n        ivFeatured2.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                pickImageFromGallery(\"Featured2\");\r\n            }\r\n        });\r\n\r\n        ivFeatured3.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                pickImageFromGallery(\"Featured3\");\r\n            }\r\n        });\r\n\r\n        ivFeatured4.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                pickImageFromGallery(\"Featured4\");\r\n            }\r\n        });\r\n\r\n        ivFeatured5.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                pickImageFromGallery(\"Featured5\");\r\n            }\r\n        });\r\n    }\r\n\r\n    //Get image from gallery\r\n    private void pickImageFromGallery(String type){\r\n        Intent intent = new Intent(Intent.ACTION_PICK);\r\n        intent.setType(\"image/*\");\r\n        switch (type){\r\n            case \"Profile\": {\r\n                profileGalleryActivityResultLauncher.launch(intent);\r\n                break;\r\n            }\r\n            case \"Featured1\":{\r\n                featured1GalleryActivityResultLauncher.launch(intent);\r\n                break;\r\n            }\r\n            case \"Featured2\":{\r\n                featured2GalleryActivityResultLauncher.launch(intent);\r\n                break;\r\n            }\r\n            case \"Featured3\":{\r\n                featured3GalleryActivityResultLauncher.launch(intent);\r\n                break;\r\n            }\r\n            case \"Featured4\":{\r\n                featured4GalleryActivityResultLauncher.launch(intent);\r\n                break;\r\n            }\r\n            case \"Featured5\":{\r\n                featured5GalleryActivityResultLauncher.launch(intent);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    //display imageUri for profile\r\n    private ActivityResultLauncher<Intent> profileGalleryActivityResultLauncher = registerForActivityResult(\r\n            new ActivityResultContracts.StartActivityForResult(),\r\n            new ActivityResultCallback<ActivityResult>() {\r\n                @Override\r\n                public void onActivityResult(ActivityResult result) {\r\n                    if(result.getResultCode() == Activity.RESULT_OK){\r\n                        Intent data = result.getData();\r\n                        imageUri = data.getData();\r\n                        ivProfile.setImageURI(imageUri);\r\n                    } else {\r\n                        Toast.makeText(SettingsActivity.this, \"Cancelled\", Toast.LENGTH_SHORT).show();\r\n                    }\r\n                }\r\n            }\r\n    );\r\n\r\n    // get imageUri for featured 1\r\n    private ActivityResultLauncher<Intent> featured1GalleryActivityResultLauncher = registerForActivityResult(\r\n            new ActivityResultContracts.StartActivityForResult(),\r\n            new ActivityResultCallback<ActivityResult>() {\r\n                @Override\r\n                public void onActivityResult(ActivityResult result) {\r\n                    if(result.getResultCode() == Activity.RESULT_OK){\r\n                        Intent data = result.getData();\r\n                        featured1Uri = data.getData();\r\n                        ivFeatured1.setImageURI(featured1Uri);\r\n                    } else {\r\n                        Toast.makeText(SettingsActivity.this, \"Cancelled\", Toast.LENGTH_SHORT).show();\r\n                    }\r\n                }\r\n            }\r\n    );\r\n\r\n    private ActivityResultLauncher<Intent> featured2GalleryActivityResultLauncher = registerForActivityResult(\r\n            new ActivityResultContracts.StartActivityForResult(),\r\n            new ActivityResultCallback<ActivityResult>() {\r\n                @Override\r\n                public void onActivityResult(ActivityResult result) {\r\n                    if(result.getResultCode() == Activity.RESULT_OK){\r\n                        Intent data = result.getData();\r\n                        featured2Uri = data.getData();\r\n                        ivFeatured2.setImageURI(featured2Uri);\r\n                    } else {\r\n                        Toast.makeText(SettingsActivity.this, \"Cancelled\", Toast.LENGTH_SHORT).show();\r\n                    }\r\n                }\r\n            }\r\n    );\r\n\r\n    private ActivityResultLauncher<Intent> featured3GalleryActivityResultLauncher = registerForActivityResult(\r\n            new ActivityResultContracts.StartActivityForResult(),\r\n            new ActivityResultCallback<ActivityResult>() {\r\n                @Override\r\n                public void onActivityResult(ActivityResult result) {\r\n                    if(result.getResultCode() == Activity.RESULT_OK){\r\n                        Intent data = result.getData();\r\n                        featured3Uri = data.getData();\r\n                        ivFeatured3.setImageURI(featured3Uri);\r\n                    } else {\r\n                        Toast.makeText(SettingsActivity.this, \"Cancelled\", Toast.LENGTH_SHORT).show();\r\n                    }\r\n                }\r\n            }\r\n    );\r\n\r\n    private ActivityResultLauncher<Intent> featured4GalleryActivityResultLauncher = registerForActivityResult(\r\n            new ActivityResultContracts.StartActivityForResult(),\r\n            new ActivityResultCallback<ActivityResult>() {\r\n                @Override\r\n                public void onActivityResult(ActivityResult result) {\r\n                    if(result.getResultCode() == Activity.RESULT_OK){\r\n                        Intent data = result.getData();\r\n                        featured4Uri = data.getData();\r\n                        ivFeatured4.setImageURI(featured4Uri);\r\n                    } else {\r\n                        Toast.makeText(SettingsActivity.this, \"Cancelled\", Toast.LENGTH_SHORT).show();\r\n                    }\r\n                }\r\n            }\r\n    );\r\n\r\n    private ActivityResultLauncher<Intent> featured5GalleryActivityResultLauncher = registerForActivityResult(\r\n            new ActivityResultContracts.StartActivityForResult(),\r\n            new ActivityResultCallback<ActivityResult>() {\r\n                @Override\r\n                public void onActivityResult(ActivityResult result) {\r\n                    if(result.getResultCode() == Activity.RESULT_OK){\r\n                        Intent data = result.getData();\r\n                        featured5Uri = data.getData();\r\n                        ivFeatured5.setImageURI(featured5Uri);\r\n                    } else {\r\n                        Toast.makeText(SettingsActivity.this, \"Cancelled\", Toast.LENGTH_SHORT).show();\r\n                    }\r\n                }\r\n            }\r\n    );\r\n\r\n    //get image from camera\r\n    private void pickImageFromCamera(){\r\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M){\r\n            if (checkSelfPermission(Manifest.permission.CAMERA) ==\r\n                    PackageManager.PERMISSION_DENIED ||\r\n                    checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) ==\r\n                            PackageManager.PERMISSION_DENIED){\r\n                //permission not enabled, request it\r\n                String[] permission = {Manifest.permission.CAMERA, Manifest.permission.WRITE_EXTERNAL_STORAGE};\r\n                //show popup to request permissions\r\n                requestPermissions(permission, PERMISSION_CODE);\r\n            }\r\n            else {\r\n                //permission already granted\r\n                openCamera();\r\n            }\r\n        }\r\n        else {\r\n            //system os < marshmallow\r\n            openCamera();\r\n        }\r\n    }\r\n\r\n    private void openCamera(){\r\n        Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);\r\n        cameraActivityResultLauncher.launch(intent);\r\n    }\r\n\r\n    @Override\r\n    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\r\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults);\r\n        switch (requestCode){\r\n            case PERMISSION_CODE:{\r\n                if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED){\r\n                    //permission from popup was granted\r\n                    openCamera();\r\n                }\r\n                else {\r\n                    //permission from popup was denied\r\n                    Toast.makeText(SettingsActivity.this, \"Permission denied...\", Toast.LENGTH_SHORT).show();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private ActivityResultLauncher<Intent> cameraActivityResultLauncher = registerForActivityResult(\r\n            new ActivityResultContracts.StartActivityForResult(),\r\n            new ActivityResultCallback<ActivityResult>() {\r\n                @Override\r\n                public void onActivityResult(ActivityResult result) {\r\n                    if(result.getResultCode() == Activity.RESULT_OK){\r\n                        Bundle bundle = result.getData().getExtras();\r\n                        Bitmap bitmap = (Bitmap) bundle.get(\"data\");\r\n\r\n                        Uri tempUri = getImageUri(getApplicationContext(), bitmap);\r\n                        imageUri = tempUri;\r\n                        ivProfile.setImageURI(tempUri);\r\n                    } else {\r\n                        Toast.makeText(SettingsActivity.this, \"Cancelled\", Toast.LENGTH_SHORT).show();\r\n                    }\r\n                }\r\n            });\r\n\r\n    public Uri getImageUri(Context inContext, Bitmap inImage) {\r\n        ByteArrayOutputStream bytes = new ByteArrayOutputStream();\r\n        inImage.compress(Bitmap.CompressFormat.JPEG, 100, bytes);\r\n        String path = MediaStore.Images.Media.insertImage(inContext.getContentResolver(), inImage, \"Title\", null);\r\n        return Uri.parse(path);\r\n    }\r\n\r\n    // For profile pic update\r\n    private void updatePhoto(){\r\n        this.database = FirebaseDatabase.getInstance();\r\n        this.mAuth = FirebaseAuth.getInstance();\r\n        this.user = this.mAuth.getCurrentUser();\r\n        this.userId = this.user.getUid();\r\n\r\n        String name = etName.getText().toString().trim();\r\n        String password = etPassword.getText().toString().trim();\r\n        String description = etDescription.getText().toString().trim();\r\n        String location = etLocation.getText().toString().trim();\r\n\r\n        currUser = new User(email, username, name, password, description, location);\r\n        StorageReference storageReference = FirebaseStorage.getInstance().getReference();\r\n\r\n        User user = new User(email, username, name, password, description, location, imageUrl, featured1Url, featured2Url, featured3Url, featured4Url, featured5Url);\r\n        updateUser(user);\r\n\r\n        if (imageUri != null){\r\n            StorageReference imageRef = storageReference.child(\"profilepics/\" + imageUri.getLastPathSegment());\r\n            UploadTask uploadTask = imageRef.putFile(imageUri);\r\n            uploadTask.addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {\r\n                @Override\r\n                public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {\r\n                    StorageMetadata snapshotMetadata = taskSnapshot.getMetadata();\r\n                    Task<Uri> downloadUrl = imageRef.getDownloadUrl();\r\n                    downloadUrl.addOnSuccessListener(new OnSuccessListener<Uri>() {\r\n                        @Override\r\n                        public void onSuccess(Uri uri) {\r\n                            imageUrl = uri.toString();\r\n                            User user = new User(email, username, name, password, description, location, imageUrl, featured1Url, \" \", \" \", \" \", \" \");\r\n                            updateUser(user);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        if (featured1Uri != null){\r\n            StorageReference featuredRef = storageReference.child(\"featuredpics/\" + featured1Uri.getLastPathSegment());\r\n            UploadTask uploadFeatured1 = featuredRef.putFile(featured1Uri);\r\n            uploadFeatured1.addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {\r\n                @Override\r\n                public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {\r\n                    StorageMetadata snapshotMetadata = taskSnapshot.getMetadata();\r\n                    Task<Uri> downloadUrl = featuredRef.getDownloadUrl();\r\n                    downloadUrl.addOnSuccessListener(new OnSuccessListener<Uri>() {\r\n                        @Override\r\n                        public void onSuccess(Uri uri) {\r\n                            featured1Url = uri.toString();\r\n                            User user = new User(email, username, name, password, description, location, imageUrl, featured1Url, \" \", \" \", \" \", \" \");\r\n                            updateUser(user);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        if (featured2Uri != null){\r\n            StorageReference featuredRef = storageReference.child(\"featuredpics/\" + featured2Uri.getLastPathSegment());\r\n            UploadTask uploadFeatured2 = featuredRef.putFile(featured2Uri);\r\n            uploadFeatured2.addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {\r\n                @Override\r\n                public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {\r\n                    StorageMetadata snapshotMetadata = taskSnapshot.getMetadata();\r\n                    Task<Uri> downloadUrl = featuredRef.getDownloadUrl();\r\n                    downloadUrl.addOnSuccessListener(new OnSuccessListener<Uri>() {\r\n                        @Override\r\n                        public void onSuccess(Uri uri) {\r\n                            featured2Url = uri.toString();\r\n                            User user = new User(email, username, name, password, description, location, imageUrl, featured1Url, featured2Url, featured3Url, featured4Url, featured5Url);\r\n                            updateUser(user);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        if (featured3Uri != null){\r\n            StorageReference featuredRef = storageReference.child(\"featuredpics/\" + featured3Uri.getLastPathSegment());\r\n            UploadTask uploadFeatured3 = featuredRef.putFile(featured3Uri);\r\n            uploadFeatured3.addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {\r\n                @Override\r\n                public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {\r\n                    StorageMetadata snapshotMetadata = taskSnapshot.getMetadata();\r\n                    Task<Uri> downloadUrl = featuredRef.getDownloadUrl();\r\n                    downloadUrl.addOnSuccessListener(new OnSuccessListener<Uri>() {\r\n                        @Override\r\n                        public void onSuccess(Uri uri) {\r\n                            featured3Url = uri.toString();\r\n                            User user = new User(email, username, name, password, description, location, imageUrl, featured1Url, featured2Url, featured3Url, featured4Url, featured5Url);\r\n                            updateUser(user);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        if (featured4Uri != null){\r\n            StorageReference featuredRef = storageReference.child(\"featuredpics/\" + featured4Uri.getLastPathSegment());\r\n            UploadTask uploadFeatured4 = featuredRef.putFile(featured4Uri);\r\n            uploadFeatured4.addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {\r\n                @Override\r\n                public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {\r\n                    StorageMetadata snapshotMetadata = taskSnapshot.getMetadata();\r\n                    Task<Uri> downloadUrl = featuredRef.getDownloadUrl();\r\n                    downloadUrl.addOnSuccessListener(new OnSuccessListener<Uri>() {\r\n                        @Override\r\n                        public void onSuccess(Uri uri) {\r\n                            featured4Url = uri.toString();\r\n                            User user = new User(email, username, name, password, description, location, imageUrl, featured1Url, featured2Url, featured3Url, featured4Url, featured5Url);\r\n                            updateUser(user);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        if (featured5Uri != null){\r\n            StorageReference featuredRef = storageReference.child(\"featuredpics/\" + featured5Uri.getLastPathSegment());\r\n            UploadTask uploadFeatured5 = featuredRef.putFile(featured5Uri);\r\n            uploadFeatured5.addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {\r\n                @Override\r\n                public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {\r\n                    StorageMetadata snapshotMetadata = taskSnapshot.getMetadata();\r\n                    Task<Uri> downloadUrl = featuredRef.getDownloadUrl();\r\n                    downloadUrl.addOnSuccessListener(new OnSuccessListener<Uri>() {\r\n                        @Override\r\n                        public void onSuccess(Uri uri) {\r\n                            featured5Url = uri.toString();\r\n                            User user = new User(email, username, name, password, description, location, imageUrl, featured1Url, featured2Url, featured3Url, featured4Url, featured5Url);\r\n                            updateUser(user);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private void initFirebase(){\r\n        this.mAuth = FirebaseAuth.getInstance();\r\n        this.user = this.mAuth.getCurrentUser();\r\n        this.userId = this.user.getUid();\r\n        this.database = FirebaseDatabase.getInstance();\r\n\r\n        DatabaseReference reference = database.getReference(Collections.users.name());\r\n        reference.child(this.userId).addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                email = snapshot.child(\"email\").getValue().toString();\r\n                username = snapshot.child(\"username\").getValue().toString();\r\n                String name = snapshot.child(\"profilename\").getValue().toString();\r\n                etName.setText(name);\r\n                String password = snapshot.child(\"password\").getValue().toString();\r\n                etPassword.setText(password);\r\n                String description = snapshot.child(\"description\").getValue().toString();\r\n\r\n                imageUrl = snapshot.child(\"profilepicUrl\").getValue().toString();\r\n                if (imageUrl.equals(\" \")){\r\n                    ivProfile.setImageResource(R.drawable.icon_default_user);\r\n                } else {\r\n                    Picasso.get().load(imageUrl).into(ivProfile);\r\n                }\r\n\r\n                featured1Url = snapshot.child(\"featured1\").getValue().toString();\r\n                if (featured1Url.equals(\" \")){\r\n                    ivFeatured1.setImageResource(R.drawable.icon_create_post);\r\n                } else {\r\n                    Picasso.get().load(featured1Url).into(ivFeatured1);\r\n                }\r\n\r\n                featured2Url = snapshot.child(\"featured2\").getValue().toString();\r\n                if (featured2Url.equals(\" \")){\r\n                    ivFeatured2.setImageResource(R.drawable.icon_create_post);\r\n                } else {\r\n                    Picasso.get().load(featured2Url).into(ivFeatured2);\r\n                }\r\n\r\n                featured3Url = snapshot.child(\"featured3\").getValue().toString();\r\n                if (featured3Url.equals(\" \")){\r\n                    ivFeatured3.setImageResource(R.drawable.icon_create_post);\r\n                } else {\r\n                    Picasso.get().load(featured3Url).into(ivFeatured3);\r\n                }\r\n\r\n                featured4Url = snapshot.child(\"featured4\").getValue().toString();\r\n                if (featured4Url.equals(\" \")){\r\n                    ivFeatured4.setImageResource(R.drawable.icon_create_post);\r\n                } else {\r\n                    Picasso.get().load(featured4Url).into(ivFeatured4);\r\n                }\r\n\r\n                featured5Url = snapshot.child(\"featured5\").getValue().toString();\r\n                if (featured5Url.equals(\" \")){\r\n                    ivFeatured5.setImageResource(R.drawable.icon_create_post);\r\n                } else {\r\n                    Picasso.get().load(featured5Url).into(ivFeatured5);\r\n                }\r\n\r\n                if (!description.equals(\" \") && !description.isEmpty()) {\r\n                    etDescription.setText(description);\r\n                }\r\n                String location= snapshot.child(\"location\").getValue().toString();\r\n                if (!location.equals(\" \") && !location.isEmpty()) {\r\n                    etLocation.setText(location);\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    private void updateUser(User user){\r\n        database.getReference(Collections.users.name()).child(mAuth.getCurrentUser().getUid())\r\n                .setValue(user).addOnCompleteListener(new OnCompleteListener<Void>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<Void> task) {\r\n                if (task.isSuccessful()){\r\n                    successfulUpdate();\r\n                } else {\r\n                    failedUpdate();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private void successfulUpdate(){\r\n        Toast.makeText(this, \"Update Successful\", Toast.LENGTH_SHORT).show();\r\n        Intent intent = new Intent(SettingsActivity.this, ProfileActivity.class);\r\n        startActivity(intent);\r\n        finish();\r\n    }\r\n\r\n    private void failedUpdate(){\r\n        Toast.makeText(this, \"Update Failed\", Toast.LENGTH_SHORT).show();\r\n    }\r\n\r\n    private boolean isValid(String name, String password){\r\n        boolean isValid = true;\r\n        if(name.isEmpty()){\r\n            this.etName.setError(\"Required Value\");\r\n            isValid = false;\r\n        }\r\n        if(password.isEmpty()){\r\n            this.etPassword.setError(\"Required Value\");\r\n            isValid = false;\r\n        } else {\r\n            if(password.length() < 8){\r\n                this.etPassword.setError(\"Must at least be 8 characters long\");\r\n                isValid = false;\r\n            }\r\n        }\r\n        return isValid;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/mobdeve/s11/manuel/tang/strayhaven/SettingsActivity.java b/app/src/main/java/com/mobdeve/s11/manuel/tang/strayhaven/SettingsActivity.java
--- a/app/src/main/java/com/mobdeve/s11/manuel/tang/strayhaven/SettingsActivity.java	(revision ce2b38e6c4694f90d110b50234badc0f6621a9c0)
+++ b/app/src/main/java/com/mobdeve/s11/manuel/tang/strayhaven/SettingsActivity.java	(date 1631794285289)
@@ -119,6 +119,9 @@
         btnLogout.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
+                FirebaseAuth.getInstance().signOut();
+                Toast.makeText(SettingsActivity.this, "Logged Out", Toast.LENGTH_SHORT).show();
+
                 Intent intent = new Intent(SettingsActivity.this, MainActivity.class);
                 intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK|Intent.FLAG_ACTIVITY_NEW_TASK);
                 startActivity(intent);
Index: app/src/main/java/com/mobdeve/s11/manuel/tang/strayhaven/HomeRequestActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.mobdeve.s11.manuel.tang.strayhaven;\r\n\r\nimport androidx.activity.result.ActivityResult;\r\nimport androidx.activity.result.ActivityResultCallback;\r\nimport androidx.activity.result.ActivityResultLauncher;\r\nimport androidx.activity.result.contract.ActivityResultContract;\r\nimport androidx.activity.result.contract.ActivityResultContracts;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class HomeRequestActivity extends AppCompatActivity {\r\n\r\n    private ImageView ivProfile;\r\n    private TextView tvUpdates;\r\n    private FloatingActionButton fabPost;\r\n    private ImageButton ibSettings,ibTracker, ibNotifications, ibMessages;\r\n    private RecyclerView rvFeed;\r\n    private ArrayList<Feed> dataFeed;\r\n    private FirebaseDatabase database;\r\n    private FirebaseAuth mAuth;\r\n    private FirebaseUser user;\r\n    private String userId;\r\n\r\n    private ArrayList<String> userKeys;\r\n    private ArrayList<String> temppostername;\r\n    private ArrayList<String> tempprofileUrl;\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_home_request);\r\n\r\n        this.initComponents();\r\n        this.initRequest();\r\n        this.initProfilePic();\r\n\r\n        if(!\"activity_main\".equals(getIntent().getStringExtra(\"from\"))){\r\n            overridePendingTransition(0,0);\r\n            getIntent().addFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);\r\n        }\r\n\r\n    }\r\n\r\n    private void initProfilePic(){\r\n        this.database = FirebaseDatabase.getInstance();\r\n        this.mAuth = FirebaseAuth.getInstance();\r\n        this.user = this.mAuth.getCurrentUser();\r\n        this.userId = this.user.getUid();\r\n\r\n        DatabaseReference reference = database.getReference(Collections.users.name());\r\n\r\n        reference.child(this.userId).addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                String imageUrl = snapshot.child(\"profilepicUrl\").getValue().toString();\r\n                if (imageUrl.equals(\" \")){\r\n                    ivProfile.setImageResource(R.drawable.icon_default_user);\r\n                } else {\r\n                    Picasso.get().load(imageUrl).into(ivProfile);\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    private void initRequest(){\r\n        this.database = FirebaseDatabase.getInstance();\r\n        this.dataFeed = new ArrayList<Feed>();\r\n\r\n        database.getReference().child(Collections.request.name()).addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                for(DataSnapshot dss:snapshot.getChildren()){\r\n                    String type = dss.child(\"type\").getValue(String.class);\r\n                        String posterkey = dss.child(\"posterKey\").getValue(String.class);\r\n                        String caption = dss.child(\"caption\").getValue(String.class);\r\n                        String location = dss.child(\"location\").getValue(String.class);\r\n                        String date = dss.child(\"date\").getValue(String.class);\r\n                        String imageUrl = dss.child(\"postUrl\").getValue(String.class);\r\n                        String postername = dss.child(\"username\").getValue(String.class);\r\n                        String profileUrl = dss.child(\"profileUrl\").getValue(String.class);\r\n                        String postKey = dss.getKey();\r\n\r\n                        Feed request = new Feed(posterkey, postername, profileUrl, imageUrl, type, location, caption, date);\r\n                        request.setPostKey(postKey);\r\n                        dataFeed.add(request);\r\n                        //dataFeed.add(new Feed(postername, profileUrl, imageUrl, type, location, caption, date));\r\n                }\r\n            }\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n\r\n        //FeedAdapter feedAdapter = new FeedAdapter(dataFeed);\r\n        this.rvFeed = findViewById(R.id.rv_home_req_feed);\r\n        this.rvFeed.setLayoutManager(new LinearLayoutManager(HomeRequestActivity.this, LinearLayoutManager.VERTICAL, true));\r\n        this.rvFeed.setAdapter(new FeedAdapter(dataFeed));\r\n    }\r\n\r\n    @Override\r\n    protected void onPause() {\r\n        super.onPause();\r\n        overridePendingTransition(0, 0);\r\n    }\r\n\r\n    //Initialize objects\r\n    private void initComponents(){\r\n        this.ivProfile = findViewById(R.id.iv_home_req_user_pic);\r\n        this.tvUpdates = findViewById(R.id.tv_home_req_update_tab);\r\n        this.ibSettings = findViewById(R.id.ib_home_req_settings);\r\n        this.fabPost = findViewById(R.id.fab_home_req_create_post);\r\n        this.ibTracker = findViewById(R.id.ib_home_req_tracker);\r\n        this.ibNotifications = findViewById(R.id.ib_home_req_notifications);\r\n        this.ibMessages = findViewById(R.id.ib_home_req_messages);\r\n\r\n        ivProfile.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(HomeRequestActivity.this, ProfileActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n        tvUpdates.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(HomeRequestActivity.this, HomeUpdateActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n        ibSettings.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(HomeRequestActivity.this, SettingsActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n        fabPost.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(HomeRequestActivity.this, PostActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n        ibTracker.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(HomeRequestActivity.this, TrackerActivity.class);\r\n                startActivity(intent);\r\n\r\n            }\r\n        });\r\n\r\n        ibNotifications.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(HomeRequestActivity.this, NotificationActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n        ibMessages.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(HomeRequestActivity.this, MessagesActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/mobdeve/s11/manuel/tang/strayhaven/HomeRequestActivity.java b/app/src/main/java/com/mobdeve/s11/manuel/tang/strayhaven/HomeRequestActivity.java
--- a/app/src/main/java/com/mobdeve/s11/manuel/tang/strayhaven/HomeRequestActivity.java	(revision ce2b38e6c4694f90d110b50234badc0f6621a9c0)
+++ b/app/src/main/java/com/mobdeve/s11/manuel/tang/strayhaven/HomeRequestActivity.java	(date 1631795484216)
@@ -58,8 +58,9 @@
         this.initRequest();
         this.initProfilePic();
 
-        if(!"activity_main".equals(getIntent().getStringExtra("from"))){
-            overridePendingTransition(0,0);
+
+        if (!"activity_main".equals(getIntent().getStringExtra("from"))) {
+            overridePendingTransition(0, 0);
             getIntent().addFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);
         }
 
